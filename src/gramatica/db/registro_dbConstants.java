/* Generated By:JavaCC: Do not edit this line. registro_dbConstants.java */
package gramatica.db;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface registro_dbConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int Procedure = 6;
  /** RegularExpression Id. */
  int C_Proc = 7;
  /** RegularExpression Id. */
  int Obj = 8;
  /** RegularExpression Id. */
  int C_Obj = 9;
  /** RegularExpression Id. */
  int Tabla = 10;
  /** RegularExpression Id. */
  int C_Tabla = 11;
  /** RegularExpression Id. */
  int Rows = 12;
  /** RegularExpression Id. */
  int C_Rows = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int BOOL = 15;
  /** RegularExpression Id. */
  int TEXT = 16;
  /** RegularExpression Id. */
  int DATE = 17;
  /** RegularExpression Id. */
  int DATETIME = 18;
  /** RegularExpression Id. */
  int C_DATE = 19;
  /** RegularExpression Id. */
  int C_DATETIME = 20;
  /** RegularExpression Id. */
  int C_INT = 21;
  /** RegularExpression Id. */
  int C_BOOL = 22;
  /** RegularExpression Id. */
  int C_TEXT = 23;
  /** RegularExpression Id. */
  int NOMBRE = 24;
  /** RegularExpression Id. */
  int C_NOMBRE = 25;
  /** RegularExpression Id. */
  int PATH = 26;
  /** RegularExpression Id. */
  int C_PATH = 27;
  /** RegularExpression Id. */
  int Crs = 28;
  /** RegularExpression Id. */
  int C_Crs = 29;
  /** RegularExpression Id. */
  int PK = 30;
  /** RegularExpression Id. */
  int AUTO_INC = 31;
  /** RegularExpression Id. */
  int FK = 32;
  /** RegularExpression Id. */
  int NULO = 33;
  /** RegularExpression Id. */
  int NOT_NULL = 34;
  /** RegularExpression Id. */
  int coma = 35;
  /** RegularExpression Id. */
  int NUM = 36;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 37;
  /** RegularExpression Id. */
  int IDEN = 38;
  /** RegularExpression Id. */
  int CADENA = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"<Procedure>\"",
    "\"</Procedure>\"",
    "\"<Object>\"",
    "\"</Object>\"",
    "\"<Tabla>\"",
    "\"</Tabla>\"",
    "\"<rows>\"",
    "\"</rows>\"",
    "\"<integer>\"",
    "\"<bool>\"",
    "\"<text>\"",
    "\"<DATE>\"",
    "\"<DATETIME>\"",
    "\"</DATE>\"",
    "\"</DATETIME>\"",
    "\"</integer>\"",
    "\"</bool>\"",
    "\"</text>\"",
    "\"<nombre>\"",
    "\"</nombre>\"",
    "\"<path>\"",
    "\"</path>\"",
    "\"<crs>\"",
    "\"</crs>\"",
    "\"PK\"",
    "\"inc\"",
    "\"FK\"",
    "\"Nulo\"",
    "\"No Nulo\"",
    "\",\"",
    "<NUM>",
    "<DECIMAL_LITERAL>",
    "<IDEN>",
    "<CADENA>",
  };

}
